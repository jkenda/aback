include "core/stack.ab"
include "core/io.ab"

macro N is 500_000 end

mem   primes     int N end
var   primes.len int end

(is the number a prime number?)
macro is_prime?
    int -> bool
is
take cand in
    0 true while
        peek i prime in
            &&  prime
                <= * dup [] primes i cand
        end
    do
        take i prime in
            + 1 i
            if = 0 % cand [] primes i then
                false
            else prime end
        end
    end drop
end end

(number of primes from 1 to limit)
macro nprimes
    int ->
is
take limit in
    5 while < primes.len limit do
        take cand in
            if is_prime? cand then
                := [] primes primes.len cand ;
                := primes.len + primes.len 1 ;
            end
            + 2 cand
        end
    end drop
end end

(initialize the array of primes)
:= [] primes 0 2 ;
:= [] primes 1 3 ;
:= primes.len 2 ;

(search the first N primes)
nprimes N ;

0 while < over primes.len do
    puti [] primes dup ; putc ' ' ;
    + 1
end drop ;
puts "\nfinished\n"
